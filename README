
 REQUIREMENTS
==============

1.  ZeroMQ

    Low-level library to build a messaging framework or client/server.

    Install it from source and install some pre-reqs:

    $ sudo apt-get install libtool uuid-dev autoconf automake 
    $ curl http://download.zeromq.org/zeromq-3.1.0-beta.tar.gz > zeromq.tar.gz
    $ tar -xzf zeromq.tar.gz
    $ cd zeromq-3.1.0
    $ ./configure
    $ make
    $ make install

    On OSX, you just need to install ossp-uuid with brew.

2.  Haskell
  
    Runs the server

    Just get the latest version which comes bundled with cabal. Afaik version doesnt matter.

    $ sudo apt-get update
    $ sudo apt-get install ghc

3.  Redis

    Will be used to store quotes in.

   $ sudo apt-get update
   $ sudo apt-get install redis


 RUNNING THE CODE
======================

1.  Compiling and installing pre-reqs
  
    Run the following bash script to update Haskell requirements

    $ cd src/qoutes
    $ ./cabal-install.sh

2.  Compile:

    $ mkdir bin
    $ ./make.sh

3.  Run code:

    Window 1:
    $ ./bin/quote_publisher tcp://127.0.0.1:8000

    Window 2:
    $ ./bin/quote_subscriber tcp://127.0.0.1:8000

    As you type in window 1, it will display in window 2.

 NEXT STEPS
============

1.  Right now, we could probably fake having a tcp/ip stream of quotes that we 
    listen to by just piping in a big text file of historical data to the publisher.

    e.g.
    
    cat data.txt | ./bin/quote_publisher tcp://127.0.0.1:8000


